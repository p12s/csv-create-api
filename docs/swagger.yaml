basePath: /
definitions:
  domain.Credentials:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  domain.Product:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
    required:
    - name
    - price
    type: object
  domain.SignUpInput:
    properties:
      email:
        type: string
      name:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  domain.UpdateProductInput:
    properties:
      name:
        type: string
      price:
        type: integer
    type: object
host: localhost:8010
info:
  contact: {}
  description: Simple product application for adding/getting products and download
    CSV-file
  title: Product app REST-API
  version: 0.0.2
paths:
  /logout:
    get:
      description: Logout, expire cookies
      operationId: logout
      responses:
        "200":
          description: ""
      summary: Logout
      tags:
      - Auth
  /products/:
    get:
      description: Getting all products
      operationId: getAllProducts
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Get all
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create product
      operationId: createProduct
      parameters:
      - description: Product created info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Product'
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Create product
      tags:
      - Product
  /products/{id}:
    delete:
      description: Deleting product by {id}
      operationId: deleteProduct
      parameters:
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Delete
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update product by {id}
      operationId: updateProduct
      parameters:
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      - description: Product updated info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateProductInput'
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update by id
      tags:
      - Product
  /sign-in:
    post:
      consumes:
      - application/json
      description: Sending data to get authentication with jwt-token
      operationId: signIn
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Sign in
      tags:
      - Auth
  /sign-up:
    post:
      consumes:
      - application/json
      description: Create account
      operationId: signUp
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.SignUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Sign up
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: cookie
    name: session_token
    type: apiKey
swagger: "2.0"
